<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ımageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABE
        CAAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABGQEAARkBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFk
        AwABGQMAAQEBAAEgBQABEAEnLgADBgEIAzQBVgNEAaADNgHMAzUBzgM1Ac4DNQHOAzUBzQNEAaEDNQFX
        AwcBCRwAAxoB7AM1Ac4DNQHOAzUBzgM1Ac4DNQHOAzUBzgM1Ac4DNQHOAzUBzgM1Ac4DNQHOAzUBzgM1
        Ac4DNQHOAzUBzgM1Ac4DNQHOAzUBzgM1Ac4DNQHOAzUBzgM1Ac4DNQHOAxoB7NwAAwQBBgM/AXQDMwHR
        A0MBhAMjATMDAwEEDAADAwEEAyMBMwNDAYQDMwHRAz8BdQMEAQYUAAM1Ac5cAAM1Ac7YAAMcAScDOQHI
        A0ABdwMGAQgkAAMGAQgDQAF3AzkByQMcASgQAAM1Ac5cAAM1Ac7UAAMmATgDNQHOAx8BLTQAAx8BLQM1
        Ac4DJgE5DAADNQHOXAADNQHO0AADHAEnAzUBzgMUARwcAAM4AWAcAAMUARwDNQHOAxwBKAgAAzUBzlwA
        AzUBzswAAwQBBgM5AcgDHwEtIAADNQHNIAADHwEtAzkByQMEAQYEAAM1Ac5cAAM1Ac7MAAM/AXQDQAF4
        JAADNQHNJAADQAF4Az8BdQQAAzUBzhQAAw0BEQMXASAkAAMXASADDAEQFAADNQHOyAADBgEIAzMB0QMG
        AQgkAAM1Ac0kAAMGAQgDMwHRAwcBCQM1Ac4UAAMXASADMwHQAx0BKhwAAx0BKgMzAdADFwEgFAADNQHO
        yAADNAFWA0MBhCgAAzUBzSgAA0MBhAM1AVcDNQHOGAADHQEqAzMB0AMdASoUAAMdASoDMwHQAx0BKhgA
        AzUBzsgAA0QBoAMjATMoAAM1Ac0oAAMjATMDRAGhAzUBzhwAAx0BKgMzAdADHQEqDAADHQEqAzMB0AMd
        ASocAAM1Ac7IAAM2AcwDAwEEKAADNQHNKAADAwEEAzUBzQM1Ac4gAAMdASoDMwHQAx0BKgQAAx0BKgMz
        AdADHQEqIAADNQHOyAADNQHOLAADNQHNLAADNQHOAzUBziQAAx0BKgMzAdADMgFSAzMB0AMdASokAAM1
        Ac7IAAM1Ac4MAAM5AWEDNQHNAzUBzQM1Ac0DNQHNAzUBzQM1Ac0DNQHNAw4B9QM1Ac0DNQHNAzUBzQM1
        Ac0DNQHNAzUBzQM1Ac0DOQFhDAADNQHOAzUBzigAAzIBUgMAAf8DMgFSKAADNQHOyAADNQHPLAADNQHN
        LAADNQHOAzUBziQAAx0BKgMzAdADMgFSAzMB0AMdASokAAM1Ac7IAAM1Ac0DAwEEKAADNQHNKAADAwEE
        AzUBzQM1Ac4gAAMdASoDMwHQAx0BKgQAAx0BKgMzAdADHQEqIAADNQHOyAADRAGhAyMBNCgAAzUBzSgA
        AyMBMwNEAaEDNQHOHAADHQEqAzMB0AMdASoMAAMdASoDMwHQAx0BKhwAAzUBzsgAAzUBVwNDAYQoAAM1
        Ac0oAANDAYQDNQFXAzUBzhgAAx0BKgMzAdADHQEqFAADHQEqAzMB0AMdASoYAAM1Ac7IAAMHAQkDMgHS
        AwcBCSQAAzUBzSQAAwYBCAMzAdEDBwEJAzUBzhQAAxgBIQMzAdADHQEqHAADHQEqAzMB0AMXASAUAAM1
        Ac7MAAM/AXUDQAF5JAADNQHNJAADQAF4Az8BdQQAAzUBzhQAAw0BEgMXASAkAAMXASADDQESFAADNQHO
        zAADBAEGAzgBygMgAS8gAAM1Ac0gAAMfAS0DOQHJAwQBBgQAAzUBzlwAAzUBztAAAxwBKAMzAdADFQEd
        HAADOAFgHAADFAEcAzUBzgMcASgIAAM1Ac5cAAM1Ac7UAAMmATkDMwHQAyABLzQAAx8BLQM1Ac4DJgE5
        DAADNQHOXAADNQHO2AADHAEoAzgBygNAAXkDBwEJJAADBgEIA0ABdwM5AckDHAEoEAADNQHOXAADNQHO
        3AADBAEGAz8BdQMyAdIDQwGFAyMBNAMDAQQMAAMDAQQDIwEzA0MBhAMzAdEDPwF1AwQBBhQAAzUBzlwA
        AzUBzuQAAwcBCQM1AVcDRAGhAzUBzQM1Ac8DNQHOAzUBzgM1Ac0DRAGhAzUBVwMHAQkcAAMaAewDNQHO
        AzUBzgM1Ac4DNQHOAzUBzgM1Ac4DNQHOAzUBzgM1Ac4DNQHOAzUBzgM1Ac4DNQHOAzUBzgM1Ac4DNQHO
        AzUBzgM1Ac4DNQHOAzUBzgM1Ac4DNQHOAzUBzgMaAezIAAFCAU0BPgcAAT4DAAEoAwABZAMAARkDAAEB
        AQABAQUAAZABARYAA/8BAAH+AQABPwGADAAB+AEcAQ8BvwL/AYAJAAHwAf8BhwG/Av8BgAkAAeMB/wHj
        Ab8C/wGACQABxwH3AfEBvwL/AYAJAAGPAfcB+AG/Av8BgAkAAZ8B9wH8Ab4BfwHPAYAJAAEfAfcB/AE+
        AT8BjwGACQABPwH3Af4BPwIfAYAJAAE/AfcB/gE/AY4BPwGACQABPwH3Af4BPwHEAX8BgAkAAX8B9wH/
        AT8B4AH/AYAJAAFwAQABBwE/AfEB/wGACQABfwH3Af8BPwHgAf8BgAkAAT8B9wH+AT8BxAF/AYAJAAE/
        AfcB/gE/AY4BPwGACQABPwH3Af4BPwIfAYAJAAEfAfcB/AE+AT8BjwGACQABnwH3AfwBvgF/Ac8BgAkA
        AY8B9wH4Ab8C/wGACQABxwH3AfEBvwL/AYAJAAHjAf8B4wG/Av8BgAkAAfAB/wGHAb8C/wGACQAB+AEc
        AQ8BvwL/AYAJAAH+AQABPwGADAAL
</value>
  </data>
</root>